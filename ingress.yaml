apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-alb-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb  # This annotation is optional if ingressClassName is used
    alb.ingress.kubernetes.io/scheme: internet-facing  # ALB scheme (internet-facing or internal)
    alb.ingress.kubernetes.io/target-type: instance  # Use instance mode for target type
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP  # Health check protocol
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port  # Use traffic port for health checks
    alb.ingress.kubernetes.io/healthcheck-path: /health  # Health check path
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'  # Health check interval
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'  # Health check timeout
    alb.ingress.kubernetes.io/success-codes: '200'  # Success codes for health checks
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'  # Healthy threshold count
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'  # Unhealthy threshold count
spec:
  ingressClassName: alb  # Specify the Ingress class name (this is sufficient)
  rules:
    - host: app.djjj.com  # Subdomain for the application
      http:
        paths:
          - path: /            # Path to match
            pathType: Prefix   # Match type for the path
            backend:
              service:
                name: my-app-service  # Name of the backend service
                port:
                  number: 80            # Port of the backend service
          - path: /api         # Additional path for API requests
            pathType: Prefix
            backend:
              service:
                name: my-api-service   # Name of the API backend service
                port:
                  number: 8080          # Port of the API backend service

# Optional additional rules can be added here.
